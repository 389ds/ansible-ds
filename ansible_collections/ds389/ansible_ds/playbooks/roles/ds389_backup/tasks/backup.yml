---
- name: Set name of the DS archive directory
  ansible.builtin.set_fact:
    ds389_backup_archive_path: "localhost_{{ lookup('pipe', 'date +%Y_%m_%d_%H_%M_%S') }}"
  when: ds389_backup_archive_path is not defined

- name: Stop DS instance, if started
  ansible.builtin.service:
    name: dirsrv@localhost
    state: stopped

- name: Create backup
  ansible.builtin.shell: >
    dsctl
    localhost
    db2bak
    {{ ds389_backup_archive_path }}
  register: ds389_backup_result

- name: Fail to backup the instance
  ansible.builtin.fail:
    msg: "Failed to backup the instance"
  when: item.find("db2bak successful") < 0
  with_items:
    - "{{ ds389_backup_result.stdout }}"

- name: Start DS instance, if started
  ansible.builtin.service:
    name: dirsrv@localhost
    state: started

- name: Handle backup
  when: ds389_backup_to_controller
  block:
    - name: Copy backup to controller
      ansible.builtin.import_tasks: "{{ role_path }}/tasks/copy_backup_from_server.yml"
      when: state|default("present") == "present"

    - name: Remove backup on server
      ansible.builtin.import_tasks: "{{ role_path }}/tasks/remove_backup_from_server.yml"
      vars:
        ds389_backup_item: "{{ ds389_backup_archive_path }}"
      when: not ds389_backup_keep_on_server
